<?php
/* Jaxl (Jabber XMPP Library)
 *
 * Copyright (c) 2009-2010, Abhinav Singh <me@abhinavsingh.com>.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *
 *   * Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in
 *     the documentation and/or other materials provided with the
 *     distribution.
 *
 *   * Neither the name of Abhinav Singh nor the names of his
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRIC
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
    
    // Jaxl/XMPP Core Settings
    define('JAXL_XMPP_GET_SLEEP', 1);
    define('JAXL_XMPP_GET_PCKTS', 1600);
    define('JAXL_XMPP_GET_PCKT_SIZE', 2048);
    define('JAXL_XMPP_GET_EMPTY_LINES', 15);
    define('JAXL_XMPP_SEND_SLEEP', 1);
    define('JAXL_XMPP_SEND_RATE', 0.1);
    define('JAXL_STREAM_TIMEOUT', 20);
    
    /********************************/
    /**** DONOT edit beyond this ****/
    /**** (if ever you need to) *****/
    /********************************/
    
    declare(ticks=1);
    define('JAXL_NAME', 'Jaxl :: Jabber XMPP Client Library');
    define('JAXL_VERSION', '2.0.0');
    
    function jaxl_require($classNames, $jaxl=false, $param=false) {
        static $included = array();
        $tagMap = array(
            // core classes
            'JAXL' => '/core/jaxl.class.php',
            'JAXLCron' => '/core/jaxl.cron.php',
            'JAXLog' => '/core/jaxl.logger.php',
            'JAXLDb' => '/core/jaxl.mdbm.php',
            'JAXLXml' => '/core/jaxl.parser.php',
            'JAXLPlugin' => '/core/jaxl.plugin.php',
            'JAXLUtil' => '/core/jaxl.util.php',
            'XML' => '/core/jaxl.xml.php',  
            // xmpp classes
            'XMPP' => '/xmpp/xmpp.class.php',
            'XMPPGet' => '/xmpp/xmpp.get.php',
            'XMPPSend' => '/xmpp/xmpp.send.php',
            'XMPPAuth' => '/xmpp/xmpp.auth.php'
        );
        
        if(!is_array($classNames)) $classNames = array('0'=>$classNames);
        foreach($classNames as $key => $className) {
            $xep = substr($className, 4, 4);
            if(substr($className, 0, 4) == 'JAXL'
            && is_numeric($xep)
            ) { // is XEP
                if(!isset($included[$className])) {
                    require_once JAXL_BASE_PATH.'/xep/jaxl.'.$xep.'.php';
                    $included[$className] = true;
                }
                call_user_func(array('JAXL'.$xep, 'init'), $jaxl, $param);
            } // is Core file
            else if(isset($tagMap[$className])) {
                require_once JAXL_BASE_PATH.$tagMap[$className];
                $included[$className] = true;
            }
        }
        return;
    }
    
    // Include Jaxl core and user application code
    jaxl_require('JAXL');
    JAXLUtil::includePath(':'.JAXL_BASE_PATH.':'.JAXL_BASE_PATH.'/core'.':'.JAXL_BASE_PATH.'/xep'.':'.JAXL_BASE_PATH.'/xmpp'.':'.JAXL_BASE_PATH.'/env');
    if(($jaxlApp = JAXLUtil::getAppFilePath()) != false) require_once $jaxlApp;
    else die("missing app file ...");
    unset($jaxlApp);
    
?>
